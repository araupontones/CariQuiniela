names <- read_html(url) %>%
rvest::html_element("aside") %>%
html_table()
names <- read_html(url) %>%
rvest::html_elements("aside") %>%
html_elements("aside") %>%
html_table()
names <- read_html(url) %>%
rvest::html_elements("aside") %>%
html_elements("aside")
View(names)
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attrs("ref")
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref")
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref") %>%
html_table()
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref") %>%
!is.na(.)
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref")
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref")
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_attr("ref")
View(names)
names
names <- read_html(url) %>%
rvest::html_elements("a")
names <- read_html(url) %>%
rvest::html_elements("a") %>%
html_elements(".bk-logo-main-90")
names <- read_html(url) %>%
html_elements(".bk-logo-main-90")
names <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attr("ref")
names <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attrs("ref")
names <- read_html(url) %>%
html_elements(".bk-logo-main-90")
View(names)
names <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attrs("title")
names <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
names
website <- read_html(url) %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table()
View(website[[1]])
unique(names)
names <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title") %>%
unique(.)
names
table_raw <- read_html(url) %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table()
names_houses <- read_html(url) %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title") %>%
unique(.)
#raw table
table_raw <- read_html(url) %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]]
View(table_raw)
library(janitor)
#raw table
table_raw <- read_html(url) %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
website <- read_html(url)
ways <- read_html() %>%
html_elements(".evTabRow")
ways <- read_html()
ways <- website %>%
html_elements(".evTabRow")
ways
ways <- website %>%
html_elements(".evTabRow") %>%
html_attrs("data-ew-div")
ways <- website %>%
html_elements(".evTabRow") %>%
html_attrs("data-ew-div")
ways <- website %>%
html_elements(".evTabRow") %>%
html_attr("data-ew-div")
ways
ways <- website %>%
html_elements(".evTabRow") %>%
html_attrs("data-ew-div")
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td")
ways
tail(ways)
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attrs("data-ew-div")
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attr("data-ew-div")
tail(ways)
ways
library(dplyr)
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attr("data-ew-div") %>%
filter(!is.na(.))
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attr("data-ew-div") %>%
filter(!is.na())
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attr("data-ew-div") %>%
unique()
ways
ways <- website %>%
html_elements(".evTabRow") %>%
html_elements("td") %>%
html_attr("data-ew-div")
ways <- ways[!is.na(ways)]
ways
ways <- ways[!is.na(ways) & ways!=""]
ways
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead")
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table()
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]]
View(ways)
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms")
View(ways)
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
janitor::remove_empty(which = "cols")
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
mutate(across(starts_with("X"), ~ .x ))
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x)))
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
names <- c("country", as.character(ways[1,-1]))
names
col_names <- c("country", as.character(ways[1,-1]))
length(col_names)
names_houses
length(names_houses)
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
length(names_houses)
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols") %>%
as.character(.[1,-1])
ways
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
ways[1]
ways[1,]
ways[1,-1]
as.character(ways[1,-1])
ways_ <- as.character(ways[1,-1])
names_houses[1, length(ways_)]
names_houses[1:length(ways_)]
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
names_houses
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
#mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
ways_ <- as.character(ways[1,-1])
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
names_houses[1:length(ways_)]
house_ <- names_houses[1:length(ways_)]
house_ways <- paste(house_, ways_, sep = "-")
#raw table
table_raw <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
col_names <- c("country", house_ways)
View(table_raw)
names(table_raw) <- col_names
View(table_raw)
exfile <- file.path(exdir,"odds_winner.csv")
odds_table <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
names(odds_table) <- col_names
View(odds_table)
exdir <- "data/2.scrapped"
exfile <- file.path(exdir,"odds_winner.csv")
rio::export(odds_table, exfile)
parse("2/3")
parse(text = "2/3")
eval(parse(text = "2/3"))
odds_table <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
mutate(across(-X1), ~ eval(parse(text = .x)))
odds_table <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols") %>%
mutate(across(-X1), ~ eval(parse(text = .x)))
odds_table <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols") %>%
mutate(across(- c(X1), ~ eval(parse(text = .x))))
odds_table <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
odds_table$X2
parse(text= odds_table$X2)
eval(parse(text= odds_table$X2))
odds_table[] <- apply(df, c(1, 2), function(x) eval(parse(text = x)))
odds_table2 <- apply(odds_table, c(1, 2), function(x) eval(parse(text = x)))
odds_table2 <- apply(odds_table, c(2), function(x) eval(parse(text = x)))
skip <- odds_table$X1
df[] <- apply(odds_table, c(1, 2), function(x) if(x %in% skip){NA} else {eval(parse(text = x))})
df <- apply(odds_table, c(1, 2), function(x) if(x %in% skip){NA} else {eval(parse(text = x))})
View(df)
df <- apply(odds_table, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
View(df)
odds_table_frac <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
odds_table <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
#mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
#vector of ways
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
#keep only those that exist in the relevant table (i know this by the odds)
house_ <- names_houses[1:length(ways_)]
#combine company with ways
house_ways <- paste(house_, ways_, sep = "-")
#add country to the namesgi
col_names <- c("country", house_ways)
names(odds_table) <- col_names
rio::export(odds_table, exfile)
names(odds_table) <- col_names
odds_table <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
View(odds_table)
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
#mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
#vector of ways
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
#keep only those that exist in the relevant table (i know this by the odds)
house_ <- names_houses[1:length(ways_)]
#combine company with ways
house_ways <- paste(house_, ways_, sep = "-")
#add country to the namesgi
col_names <- c("country", house_ways)
names(odds_table) <- col_names
names(odds_table)
#vector of ways
ways_ <- as.character(ways[1,-1])
#vector of ways
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
#keep only those that exist in the relevant table (i know this by the odds)
house_ <- names_houses[1:length(ways_)]
library(rvest)
library(janitor)
library(dplyr)
exdir <- "data/2.scrapped"
exfile <- file.path(exdir,"odds_winner.csv")
url <-"raw_htmls/winner.html"
website <- read_html(url)
odds_table_frac <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
odds_table <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
skip <- odds_table_frac$X1
odds_table <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
#transform fractions to decimals
#Skip if country
skip <- odds_table_frac$X1
odds_table <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table
odds_table[] <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table[] <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}) %>% as.data.frame()
odds_table[] <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table
odds_table[] <- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table
View(odds_table)
class(odds_table)
odds_table %>% tibble(.)
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}) %>% tibble()
View(odds_table)
names(odds_table)
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
class(odds_table)
odds_table[<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
odds_table[]<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
class(odds_table)
as.data.frame(odds_table)
odds_table[]<- as.data.frame(apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}))
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))})
t <- as.data.frame(odds_table)
odds_table <- as.data.frame(odds_table)
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}) %>% as.data.frame()
#transform fractions to decimals
#Skip if country
skip <- odds_table_frac$X1
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}) %>% as.data.frame()
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
#mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
#vector of ways
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
#keep only those that exist in the relevant table (i know this by the odds)
house_ <- names_houses[1:length(ways_)]
#combine company with ways
house_ways <- paste(house_, ways_, sep = "-")
#add country to the namesgi
col_names <- c("country", house_ways)
names(odds_table) <- col_names
names(odds_table)
rio::export(odds_table, exfile)
library(rvest)
library(janitor)
library(dplyr)
exdir <- "data/2.scrapped"
exfile <- file.path(exdir,"odds_winner.csv")
#read website ----------------------------------------------------------------
# from https://www.oddschecker.com/football/world-cup/winner
# the site was locked so I created a manually downloaded the .html
url <-"raw_htmls/winner.html"
website <- read_html(url)
#read table of odds -----------------------------------------------------------
odds_table_frac <- website %>%
rvest::html_elements("table") %>%
html_elements("tbody") %>%
html_table() %>%
.[[1]] %>%
janitor::remove_empty(which = "cols")
#transform fractions to decimals
#Skip if country
skip <- odds_table_frac$X1
odds_table<- apply(odds_table_frac, c(1, 2), function(x) if(x %in% skip){x} else {eval(parse(text = x))}) %>% as.data.frame()
#ways -------------------------------------------------------------
#each bet was a way (1/2, 1/4. etc)
# I download these separately so I can create the names of the variables later
ways <- website %>%
rvest::html_elements("table") %>%
html_elements("thead") %>%
html_table() %>%
.[[1]] %>%
filter(X1 == "Each-way terms") %>%
#mutate(across(starts_with("X"), ~ ifelse(.x == "", NA, .x))) %>%
janitor::remove_empty(which = "cols")
#vector of ways
ways_ <- as.character(ways[1,-1])
#names of the bet companies ----------------------------------------
names_houses <- website %>%
html_elements(".bk-logo-main-90") %>%
html_attr("title")
#keep only those that exist in the relevant table (i know this by the odds)
house_ <- names_houses[1:length(ways_)]
#create the names of the oods table ---------------------------------------
#combine company with ways
house_ways <- paste(house_, ways_, sep = "-")
#add country to the namesgi
col_names <- c("country", house_ways)
names(odds_table) <- col_names
#================================================================================
#export
rio::export(odds_table, exfile)
View(odds_table)
