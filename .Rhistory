library(dplyr)
library(httr)
library(rio)
library(rvest)
library(tibble)
library(tidyr)
library(glue)
gmdacr::load_functions("functions")
sistema <- Sys.info()['sysname']
get_proj_dir <- function(){
if(sistema == "Windows"){
my_dir <- getwd()
} else {
my_dir = "/home/rstudio/CariQuiniela"
}
}
dir_data <- file.path(get_proj_dir(), "data")
dir_r <- file.path(get_proj_dir(), "R_")
source(file.path(dir_r,"fbref_matches/2.Scrap_games_2022_before_WC.R")) #exports to data/2.scrapped/fbref/matches_2022_before_WC.csv
source(file.path(dir_r,"fbref_matches/4.clean_matches_before_WC.R")) #exports to data/2.1intermediate/matches_before_WC.rds
#Scrap the world cup matches --------------------------------------------------
source(file.path(dir_r,"request_WC_scores.R"), encoding = "UTF-8") #exports to data/2.1.intermediate/WC_matches.rds
#Scrap the world cup matches --------------------------------------------------
source(file.path(dir_r,"request_WC_scores.R"), encoding = "UTF-8") #exports to data/2.1.intermediate/WC_matches.rds
#Clean matches ------------------------------------------------------------------
#Create tables "ind_all_matches.csv" that contains all the matches played since 2012 and to be played until the end of the WC
#ind_teams_year.csv" that contains the summary stats of each country since 2012
source(file.path(dir_r, "Append_before_and_WC.R"), encoding = "UTF-8")
library(stringr)
message("Creating indicators and appending WC and  pre matches")
sistema <- Sys.info()['sysname']
exfile_matches <- file.path(dir_data, "3.clean/ind_all_matches.csv")
exfile_year_team <- file.path(dir_data, "3.clean/ind_teams_year.csv")
rankings_fifa <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/main/data/3.clean/fifa_rankings.csv")
#import intermediate data ------------------------------------------------------
if(sistema == "Windows"){
pre_wc <- rio::import(file.path(dir_data, "2.1.intermediate/matches_before_WC.rds"))
} else {
pre_wc <-rio::import("https://github.com/araupontones/CariQuiniela/blob/main/data/2.1.intermediate/matches_before_WC.rds?raw=true")
}
wc <-  import(file.path(dir_data, "2.1.intermediate/WC_matches.rds"))
View(pre_wc$scores)
source(file.path(dir_r,"fbref_matches/2.Scrap_games_2022_before_WC.R")) #exports to data/2.scrapped/fbref/matches_2022_before_WC.csv
source(file.path(dir_r,"fbref_matches/4.clean_matches_before_WC.R")) #exports to data/2.1intermediate/matches_before_WC.rds
source(file.path(dir_r,"fbref_matches/4.clean_matches_before_WC.R")) #exports to data/2.1intermediate/matches_before_WC.rds
#clean and create indicators
library(dplyr)
library(tidyr)
library(rio)
library(stringr)
library(janitor)
#clean_all_matches_before_WC.R
message("Cleaning matches played  before WC.....")
indir <- file.path(dir_data,"2.scrapped/fbref")
#all_competitions.csv is created in R_/scrap_games_teams.R
infile_before_2022 <- file.path(indir,"matches_before_2022.csv") #from R_scrap_games_before_2022.R
#infile_2022 <-  file.path(indir,"matches_2022_before_WC.csv") #from R_/2.scrap_games_2022_before_WC.R
infile_2022 <- "https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/2.scrapped/fbref/matches_2022_before_WC.csv"
look_up <- import(file.path(dir_data,"1.lookups/teams_urls.csv")) %>% select(team, id)
#Exit paths ---------------------------------------------------------------------
exdir <- file.path(dir_data,"2.1.intermediate")
exfile <- file.path(exdir, "matches_before_WC.rds")
#read scrapped data ----------------------------------------------------------
before_2022 <- import(infile_before_2022) %>% mutate(qatar = FALSE)  %>% filter(GF != "", !is.na(Date))
during_2022<- import(infile_2022)
#Clean table of all matches & define year variable ---------------------------
db_matches <- before_2022 %>%
#bind with matches of 2022 previous WC
plyr::rbind.fill(during_2022) %>%
#drop penalties in drawn matches, penalties are reported within parenthesis.
mutate(across(c(GF, GA) , function(x) as.numeric(str_replace(x, "\\([0-9]\\)",""))),
year = str_sub(Date,1,4)
) %>%
clean_Opponent()%>%
clean_teams(., team) %>%
clean_teams(.,Opponent)%>%
select(year, team, Opponent, Date, Comp, Venue, Result, GF, GA, qatar) %>%
#remove duplicates (there were some duplicated matches while scrapping)
distinct() %>%
#id match
create_ids(., look_up) %>%
ungroup()
#clean matches manually because FBREF has shot us down--------------------------
clean_scores <- function(data, local, date, GF, GA, result){
data$GF[data$team == local & data$Date == date] <- GF
data$GA[data$team == local & data$Date == date] <- GA
data$Result[data$team == local & data$Date == date] <- result
return(data)
}
View(clean_scores())
View(clean_scores)
View(db_matches)
db_matches <- clean_scores(db_matches, "Argentina","2022-11-10",5,0,"W")
View(db_matches)
db_matches <- clean_scores(db_matches, "Argentina","2022-11-16",5,0,"W")
#clean and create indicators
library(dplyr)
library(tidyr)
library(rio)
library(stringr)
library(janitor)
#clean_all_matches_before_WC.R
message("Cleaning matches played  before WC.....")
indir <- file.path(dir_data,"2.scrapped/fbref")
#all_competitions.csv is created in R_/scrap_games_teams.R
infile_before_2022 <- file.path(indir,"matches_before_2022.csv") #from R_scrap_games_before_2022.R
#infile_2022 <-  file.path(indir,"matches_2022_before_WC.csv") #from R_/2.scrap_games_2022_before_WC.R
infile_2022 <- "https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/2.scrapped/fbref/matches_2022_before_WC.csv"
look_up <- import(file.path(dir_data,"1.lookups/teams_urls.csv")) %>% select(team, id)
#Exit paths ---------------------------------------------------------------------
exdir <- file.path(dir_data,"2.1.intermediate")
exfile <- file.path(exdir, "matches_before_WC.rds")
#read scrapped data ----------------------------------------------------------
before_2022 <- import(infile_before_2022) %>% mutate(qatar = FALSE)  %>% filter(GF != "", !is.na(Date))
during_2022<- import(infile_2022)
#Clean table of all matches & define year variable ---------------------------
db_matches <- before_2022 %>%
#bind with matches of 2022 previous WC
plyr::rbind.fill(during_2022) %>%
#drop penalties in drawn matches, penalties are reported within parenthesis.
mutate(across(c(GF, GA) , function(x) as.numeric(str_replace(x, "\\([0-9]\\)",""))),
year = str_sub(Date,1,4)
) %>%
clean_Opponent()%>%
clean_teams(., team) %>%
clean_teams(.,Opponent)%>%
select(year, team, Opponent, Date, Comp, Venue, Result, GF, GA, qatar) %>%
#remove duplicates (there were some duplicated matches while scrapping)
distinct() %>%
#id match
create_ids(., look_up) %>%
ungroup()
#clean matches manually because FBREF has shot us down--------------------------
clean_scores <- function(data, local, date, GF, GA, result){
data$GF[data$team == local & data$Date == date] <- GF
data$GA[data$team == local & data$Date == date] <- GA
data$Result[data$team == local & data$Date == date] <- result
return(data)
}
db_matches <- clean_scores(db_matches, "Argentina","2022-11-16",5,0,"W")
db_matches <- clean_scores(db_matches, "Tunisia","2022-11-16",2,0,"W")
db_matches <- clean_scores(db_matches, "Saudi Arabia","2022-11-16",0,1,"L")
db_matches <- clean_scores(db_matches, "Poland","2022-11-16",1,0,"W")
db_matches <- clean_scores(db_matches, "Mexico","2022-11-16",2,1,"L")
db_matches <- clean_scores(db_matches, "Germany","2022-11-16",1,0,"W")
View(db_matches)
# db_matches <- clean_scores(db_matches, "Saudi Arabia","2022-11-10",1,1,"D")
#transform matches as local vs visitante format ------------------------------
#this is the data to be exported
db_matches_unique <- db_matches %>%
filter(!qatar) %>%
group_by(id_match) %>%
arrange(id_match) %>%
mutate(Venue = ifelse(is.na(id_opponent) & Venue == "Away", "awayNoWC", Venue)) %>%
#only keep home and neutral matches to capture goles local and goles visitante
filter(Venue %in% c("Home", "Neutral", "awayNoWC")) %>%
slice(1) %>%
#correct for teams that are not going to the WC
mutate(bucket = team,
team = ifelse(Venue == "awayNoWC", Opponent, team),
Opponent = ifelse(Venue == "awayNoWC", bucket, Opponent),
goles_local = case_when(Venue == "awayNoWC" ~ GA,
T ~ GF),
goles_visitante = case_when(Venue == "awayNoWC" ~ GF,
T ~ GA),
neutral = Venue == "Neutral",
.after = "GA"
) %>%
select(-bucket) %>%
ungroup() %>%
select(-c(Venue, Result, GF, GA, starts_with("id_"))) %>%
arrange(desc(Date))  %>%
select(year, team, Opponent, Date, goles_local, goles_visitante, qatar) %>%
mutate(Date = as.character(Date))
pre_cup_matches <- list(db_matches_unique, db_matches)
names(pre_cup_matches) <- c("scores", "by_team")
export(pre_cup_matches, exfile)
paste("saved to:", exfile)
names(matches_clean)
View(matches_clean)
GF ~ local_fifa_index + visitante_fifa_index + all_nrm_did_score_local +
names(matches_clean)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_"))
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff"))
#clean data matches
locales <- matches %>%
select(year, team, Opponent, Date, GF = goles_local, GA = goles_visitante, local_fifa_index, visitante_fifa_index)
visitantes <- matches %>%
select(year, team = Opponent, Date,Opponent = team, GF = goles_visitante, GA = goles_local, local_fifa_index = visitante_fifa_index,
visitante_fifa_index = local_fifa_index)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff"))
library(rio)
library(dplyr)
years <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_teams_year.csv")
matches <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_all_matches.csv")
odds<- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_ods_winner.csv")
#clean data matches
locales <- matches %>%
select(year, team, Opponent, Date, GF = goles_local, GA = goles_visitante, local_fifa_index, visitante_fifa_index)
visitantes <- matches %>%
select(year, team = Opponent, Date,Opponent = team, GF = goles_visitante, GA = goles_local, local_fifa_index = visitante_fifa_index,
visitante_fifa_index = local_fifa_index)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff"))
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_"))
View(matches_clean)
names(matches_clean)
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+ fail_to_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
+ ,
data=matches_clean)
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+ fail_to_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
sum(is.na(matches_clean$fail_to_score_local))
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_")) %>%
filter(!is.na(fail_to_score_local))
sum(is.na(matches_clean$fail_to_score_local))
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+ fail_to_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_")) %>%
filter(!is.na(fail_to_score_local))
sum(is.na(matches_clean$fail_to_score_local))
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+ fail_to_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
View(matches_clean)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF))
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local+ fail_to_score_local +
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
fail_to_score_local +
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~ local_fifa_index + visitante_fifa_index +
did_score_local +
GF_local + GA_visitante +
didnt_receive_goal_visitante
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante + didnt_receive_goal_visitante #poder defensibo
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
#GA_visitante +
didnt_receive_goal_visitante #poder defensibo
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante #poder defensibo
,
data=matches_clean)
linearMod$coefficients
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante + #poder defensivo
year
,
data=matches_clean)
linearMod$coefficients
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("eff")) %>%
rename_all(function(x)str_remove(x, "all_nrm_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF)) %>%
mutate(year = as.factor(year))
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante + #poder defensivo
year
,
data=matches_clean)
linearMod$coefficients
names(local)
names(matches)
matches <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_all_matches.csv")
names(matches)
years <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_teams_year.csv")
matches <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_all_matches.csv")
odds<- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_ods_winner.csv")
#clean data matches
locales <- matches %>%
select(year, team, Opponent, Date, GF = goles_local, GA = goles_visitante, local_fifa_index, visitante_fifa_index)
visitantes <- matches %>%
select(year, team = Opponent, Date,Opponent = team, GF = goles_visitante, GA = goles_local, local_fifa_index = visitante_fifa_index,
visitante_fifa_index = local_fifa_index)
names(years)
names(matches_clean)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("ef")) %>%
rename_all(function(x)str_remove(x, "all_nrm_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF)) %>%
mutate(year = as.factor(year))
names(matches_clean)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("ef")) %>%
rename_all(function(x)str_remove(x, "all_nrm_|all_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF)) %>%
mutate(year = as.factor(year))
names(matches_clean)
linearMod <- lm(GF ~
#performance team
local_fifa_index + efectividad_local +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante + efectividad_visitante +#poder defensivo
year
,
data=matches_clean)
linearMod$coefficients
linearMod$coefficients
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante + #poder defensivo
year
,
data=matches_clean)
linearMod$coefficients
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
install.packages("jtools")
library(jtools)
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
install.packages("ggstance")
install.packages("ggstance")
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
install.packages("ggstance")
install.packages("ggstance")
install.packages("ggstance")
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
library(jtools)
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
library(jtools)
library(ggplot2)
library(ggplot2)
#Daily flow c
library(dplyr)
.libPaths()
library(rio)
library(dplyr)
years <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_teams_year.csv")
matches <- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_all_matches.csv")
odds<- import("https://raw.githubusercontent.com/araupontones/CariQuiniela/rankings/data/3.clean/ind_ods_winner.csv")
#clean data matches
locales <- matches %>%
select(year, team, Opponent, Date, GF = goles_local, GA = goles_visitante, local_fifa_index, visitante_fifa_index)
visitantes <- matches %>%
select(year, team = Opponent, Date,Opponent = team, GF = goles_visitante, GA = goles_local, local_fifa_index = visitante_fifa_index,
visitante_fifa_index = local_fifa_index)
names(years)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("ef")) %>%
rename_all(function(x)str_remove(x, "all_nrm_|all_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF)) %>%
mutate(year = as.factor(year))
library(stringr)
matches_clean <- rbind(locales, visitantes) %>%
left_join(years, by= c("year", "team")) %>%
left_join(years, by = c("year", "Opponent" ="team"), suffix = c("_local", "_visitante")) %>%
select(-starts_with("Neutral"), - starts_with("Home"), -starts_with("Away")) %>%
select(year, team, Opponent, Date, GF, GA, contains("fifa"), contains("nrm"), contains("ef")) %>%
rename_all(function(x)str_remove(x, "all_nrm_|all_")) %>%
filter(!is.na(fail_to_score_local)) %>%
filter(!is.na(GF)) %>%
mutate(year = as.factor(year))
linearMod <- lm(GF ~
#performance team
local_fifa_index +
GF_local + did_score_local +# poder ofensivo
#performance Opponent
visitante_fifa_index +
GA_visitante +
didnt_receive_goal_visitante + #poder defensivo
year,
data=matches_clean)
linearMod$coefficients
library(jtools)
chart_coefficients= plot_summs(linearMod, linearMod, robust = list(FALSE, "HC0"),
model.names = c("OLS", "HC0"))
