library(rvest)
website <- read_html(url)
View(website)
teams <- website %>%
html_attr("data-stat")
teams <- website %>%
html_attr(" data-stat")
teams <- website %>%
html_element("span")
View(teams)
teams
teams <- website %>%
html_element("a")
teams
teams <- website %>%
html_element("a") %>%
html_text2()
teams
teams <- website %>%
html_element("a")
teams$node
teams$doc
website$doc
website$a
website$doc
website <- read_html(url)
teams <- website %>%
html_element("td")
teams
teams <- website %>%
html_elements("td")
teams
teams <- website %>%
html_elements("td") %>%
html_element("a")
teams
teams <- website %>%
html_elements("td") %>%
html_elements("a")
teams
teams <- website %>%
html_elements("td") %>%
html_elements("a") %>%
html_text2()
teams
urls <- website %>%
html_attrs("href")
urls <- website %>%
html_elements("td") %>%
html_elements("a")
urls
urls <- website %>%
html_elements("td") %>%
html_elements("a") %>%
html_attr("href")
urls
library(tibble)
teams_pages <- tibble(
team = teams,
url = paste0("https://fbref.com/", urls)
)
View(teams_pages)
library(httr)
library(rvest)
library(tibble)
links <- website %>%
html_elements("td") %>%
html_elements("a")
teams <- links %>%
html_text2()
teams
urls <- links %>%
html_attr("href")
#join names and urls to create a table -----------------------------------------
teams_pages <- tibble(
team = teams,
url = paste0("https://fbref.com/", urls)
)
exdir <- "data/1.lookups"
exfile <- file.path(exdir, "teams_urls.csv")
#export -----------------------------------------------------------------------
rio::export(teams_pages, exfile)
#define parameters -----------------------------------------------------------
indir <- "data/1.lookups"
infile <- file.path(exdir, "teams_urls.csv")
#read urls of teams -----------------------------------------------------------
teams_urls <- import(infile)
library(rio)
#read urls of teams -----------------------------------------------------------
teams_urls <- import(infile)
url <- teams_urls$url[1]
url
website <- read_html(url)
website <- read_html(url) %>%
html_elements("table")
View(website)
website <- read_html(url) %>%
html_elements("table") %>%
html_element("#matchlogs_for")
website
website$1
website[[1]]
website <- read_html(url) %>%
html_elements("table")
website[[1]]
website <- read_html(url) %>%
html_elements("table")%>%
html_table()
html_element("#matchlogs_for") %>%
website[[1]]
View(website)
html_element("#matchlogs_for") %>%
website[[1]]
html_element("#matchlogs_for") %>%
website[1]
website <- read_html(url) %>%
html_elements("table")%>%
html_table()
View(website)
website[[1]]
t_1<- website[[1]]
View(t_1)
website <- read_html(url) %>%
html_elements("table")%>%
html_elements("#matchlogs_for")
View(website)
website <- read_html(url) %>%
html_elements("table") %>%
html_elements(".matchlogs_for")
website <- read_html(url) %>%
html_elements("table") %>%
html_elements(".stats_table")
View(website)
website <- read_html(url) %>%
html_elements("table")
website <- read_html(url) %>%
html_elements("table")  %>%
html_attrs()
website
website <- read_html(url) %>%
html_elements("#matchlogs_for")
website
View(website)
website <- read_html(url) %>%
html_elements("#matchlogs_for") %>%
html_table()
t_1<- website[[1]]
View(t_1)
#Fixture
fixture <- website %>%
html_elements("#matchlogs_for") %>%
html_table()
website <- read_html(url)
#Fixture
fixture <- website %>%
html_elements("#matchlogs_for") %>%
html_table()
#get links to other tables
links_to_tables <- website %>%
html_elements("a")
links_to_tables
website <- read_html(url)
#get links to other tables
links_to_tables <- website %>%
html_elements("a")
links_to_tables
View(links_to_tables)
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
do.call()
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
html_attrs("href")
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
html_attrs("href")
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
html_attr("href")
View(links_to_tables)
links_to_tables
links_to_tables[grepl("all_comps", links_to_tables)]
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
html_attr("href") %>%
as.data.frame()
links_to_tables
names(links_to_tables)
#get links to other tables
links_to_tables <- website %>%
html_elements("a") %>%
html_attr("href")
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)]
all_comps
unique(all_comps)
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)] %>% unique()
all_comps
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)] %>% unique() %>%
filter(grepl("schedule"))
all_comps
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)] %>% unique() %>%
filter(grepl("schedule",.))
all_comps
url_stats <- all_comps[grepl("schedule", all_comps)]
all_comps
url_stats
grepl("schedule", all_comps)
all_comps
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)] %>% unique()
all_comps
grepl("schedule", all_comps)
url_stats <- all_comps[grepl("schedule", all_comps)]
url_stats
url_stats <- all_comps[grepl("schedule|shooting", all_comps)]
url_stats
url_stats <- all_comps[grepl("schedule|shooting|keeper", all_comps)]
url_stats
url_stats <- paste0("https://fbref.com/",all_comps[grepl("schedule|shooting|keeper", all_comps)]
grepl("schedule", all_comps)
url_stats <- paste0("https://fbref.com/",all_comps[grepl("schedule|shooting|keeper", all_comps)])
url_stats
url_stats <- paste0("https://fbref.com/",all_comps[grepl("misc|shooting|keeper", all_comps)])
table_stats <- read_html(url_stats[1])
table_stats <- read_html(url_stats[1]) %>%
html_elements("table")
table_stats <- read_html(url_stats[1]) %>%
html_elements("table") %>%
html_table()
View(table_stats)
url_stats[1]
table_stats <- read_html(url_stats[1]) %>%
html_elements("#matchlogs_for") %>%
html_table()
View(table_stats)
table_stats <- read_html(url_stats[1]) %>%
html_element("#matchlogs_for") %>%
html_table()
View(table_stats)
table_stats <- read_html(url_stats[2]) %>%
html_element("#matchlogs_for") %>%
html_table()
View(table_stats)
table_stats[1,]
table_stats[,1]
table_stats[1,]
names(table_stats) <- table_stats[1,]
names(table_stats) <- as.character(table_stats[1,])
View(table_stats)
table_stats_final <- table_stats[-1,]
View(table_stats_final)
table_stats_final <- table_stats[-1,] %>%
select(-c(Round	Day	Venue	Result))
table_stats_final <- table_stats[-1,] %>%
select(-c(Round,	Day,	Venue,	Result))
library(tidyr)
table_stats_final <- table_stats[-1,] %>%
select(-c(Round,	Day,	Venue,	Result))
library(dplyr)
table_stats_final <- table_stats[-1,] %>%
select(-c(Round,	Day,	Venue,	Result))
table_stats_final <- table_stats[-c(1,9), ] %>%
select(-c(Round,	Day,	Venue,	Result))
table_stats_final <- table_stats[-c(1,8,9), ] %>%
select(-c(Round,	Day,	Venue,	Result))
table_stats_final <- table_stats[-c(1,8,9), ]
table_stats_final <- table_stats[-1,-c(8) ]
table_stats_final <- table_stats[-1,-c(8,9) ]
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day,	Venue,	Result, GA))
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day,	Venue,	Result, GA))
View(table_stats_final)
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day,	Venue,	Result, GA, GF))
View(table_stats_final)
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp	Venue,	Result, GA, GF))
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF))
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
url_stats
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
View(lista_tablas)
data_tablas <- plyr::join_all(lista_tablas)
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`, PKatt))
})
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = NA) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`, PKatt))
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = NA) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`, PKatt))
})
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = 0) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`, PKatt))
})
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = 0) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = 0) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
mutate(PKatt = 0) %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
data_tablas <- plyr::join_all(lista_tablas)
data_tablas <- plyr::join_all(lista_tablas, by = c("Date", "Oponent"))
data_tablas <- plyr::join_all(lista_tablas, by = c("Date", "Opponent"))
View(data_tablas)
#Fixture (all matches in 2022)-------------------------------------------------
fixture <- website %>%
html_elements("#matchlogs_for") %>%
html_table()
#Fixture (all matches in 2022)-------------------------------------------------
fixture <- website %>%
html_element("#matchlogs_for") %>%
html_table()
#join with fixture
final_tabla <- fixture %>%
left_join(data_tablas, by = c("Date", "Opponent"))
#join all tables
data_tablas <- plyr::join_all(lista_tablas, by = c("Date", "Opponent")) %>%
select(-PKatt)
#join with fixture
final_tabla <- fixture %>%
left_join(data_tablas, by = c("Date", "Opponent"))
View(final_tabla)
team <-teams_urls$team[1]
#join with fixture
final_tabla <- fixture %>%
left_join(data_tablas, by = c("Date", "Opponent")) %>%
mutate(team = team)
View(final_tabla)
#join with fixture
final_tabla <- fixture %>%
left_join(data_tablas, by = c("Date", "Opponent")) %>%
mutate(team = team) %>%
relocate(team)
View(final_tabla)
read_teams <- lapply(1:nrow(teams_urls), function(i){
url <- teams_urls$url[i]
team <-teams_urls$team[i]
print(team)
})
read_teams <- lapply(1:nrow(teams_urls), function(i){
url <- teams_urls$url[i]
team <-teams_urls$team[i]
website <- read_html(url)
#Fixture (all matches in 2022)-------------------------------------------------
fixture <- website %>%
html_element("#matchlogs_for") %>%
html_table()
})
View(read_teams)
read_teams <- lapply(1:nrow(teams_urls), function(i){
url <- teams_urls$url[i]
team <-teams_urls$team[i]
message(team)
website <- read_html(url)
#Fixture (all matches in 2022)-------------------------------------------------
fixture <- website %>%
html_element("#matchlogs_for") %>%
html_table()
#get links to other tables ----------------------------------------------------
# Apart from fixture, there are three tables with relevant indicators
# misc, shooting and keeper
#lets get the link to those
links_to_tables <- website %>%
html_elements("a") %>%
html_attr("href")
all_comps <- links_to_tables[grepl("all_comps", links_to_tables)] %>% unique()
url_stats <- paste0("https://fbref.com/",all_comps[grepl("misc|shooting|keeper", all_comps)])
#get the tables
lista_tablas <- lapply(url_stats, function(x){
message(x)
#get the table
table_stats <- read_html(x) %>%
html_element("#matchlogs_for") %>%
html_table()
#make the first row the table names
names(table_stats) <- as.character(table_stats[1,])
print(names(table_stats))
#now get rid of the first row and delete redundant variables
#this variables are already in fixture
table_stats_final <- table_stats[-1, ] %>%
select(-c(Round,	Day, Time, Comp,	Venue,	Result, GA, GF, `Match Report`))
})
#join all tables
data_tablas <- plyr::join_all(lista_tablas, by = c("Date", "Opponent")) %>%
select(-PKatt)
#join with fixture
final_tabla <- fixture %>%
left_join(data_tablas, by = c("Date", "Opponent")) %>%
mutate(team = team) %>%
relocate(team)
})
View(read_teams)
data_Teams <- do.call(rbind, read_teams)
View(data_Teams)
exdir <- "data/2.scrapped"
exfile <- file.path(exdir,"2022_All_competitions.csv")
export(data_Teams, exfile)
View(teams_urls)
